### **Step 1: Install and load necessary packages**

```{r}
options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("bayesplot")
install.packages("brms")
library(brms)
library(bayesplot)
```

```{r}
# Set seed for reproducibility
set.seed(123)

# Generate data for 100 individuals
n <- 145

# Generate random values for physical activity level (in minutes)
physical_activity <- rpois(n, lambda = 60)

# Generate random values for heart rate (in beats per minute)
heart_rate <- rnorm(n, mean = 75, sd = 10)

# Generate random values for age (in years)
age <- sample(18:80, n, replace = TRUE)

# Generate random values for weight (in kilograms)
weight <- rnorm(n, mean = 70, sd = 10)

# Generate random values for gender (1 = male, 2 = female)
gender <- sample(1:2, n, replace = TRUE)

# Create a data frame
data <- data.frame(
  physical_activity = physical_activity,
  heart_rate = heart_rate,
  age = age,
  weight = weight,
  gender = factor(gender, labels = c("Male", "Female"))
)

# View the first few rows of the dataset
head(data)
```

### Step 2: Bayesian Linear Regression

I am interested in assessing the relationship between exercise and heart rate.

```{r}
# In this example, we'll model heart rate as a function of physical activity, age, weight, and gender
model <- brm(
  heart_rate ~ physical_activity + age + weight + gender,
  data = data,
  family = gaussian()  # Assuming heart rate follows a Gaussian (normal) distribution
)

# Print a summary of the fitted model
summary(model)

# Plot the posterior distributions of model parameters
plot(model)
```

*Now, lets compute our means and credible intervals.*

```{r}
# Extract posterior summary
posterior_summary <- posterior_summary(model)

# Extract posterior means from the summary
posterior_means <- fixef(model)
posterior_means <- posterior_means[, "Estimate"]

# Specify prior means (assuming a normal prior with mean 0)
prior_means <- rep(0, length(posterior_means))

# Compute credible intervals for posterior means
posterior_quantiles <- quantile(model$posterior, c(0.025, 0.975))

# Assign the quantiles to posterior credible intervals
posterior_ci <- posterior_quantiles

# Compute credible intervals for prior means
prior_ci <- c(NA, NA)  # Prior distribution centered at 0, so credible intervals are NA

# Test for difference between posterior and prior means
difference_test <- ifelse(posterior_ci[1] > prior_ci[2] | posterior_ci[2] < prior_ci[1],
                          "Significant difference", "No significant difference")
```

### Step 3: Results Interpretation and Reporting

```{r}
# Extract summary of the posterior distribution
posterior_summary <- summary(model)

# Extract posterior means and credible intervals
posterior_summary_table <- as.data.frame(posterior_summary$fixed)

# Extract only the mean and credible intervals
posterior_summary_table <- posterior_summary_table[, c("Estimate", "Est.Error")]

# Rename the columns for clarity
colnames(posterior_summary_table) <- c("Posterior_Mean", "Posterior_Std_Dev")

# Add parameter names
posterior_summary_table$Parameter <- rownames(posterior_summary_table)

# Compute credible intervals
posterior_summary_table$Posterior_CI_Lower <- posterior_summary_table$Posterior_Mean - 1.96 * posterior_summary_table$Posterior_Std_Dev
posterior_summary_table$Posterior_CI_Upper <- posterior_summary_table$Posterior_Mean + 1.96 * posterior_summary_table$Posterior_Std_Dev

# Specify prior means (assuming a normal prior with mean 0)
prior_means <- rep(0, nrow(posterior_summary_table))

# Create a summary table
summary_table <- data.frame(
  Parameter = posterior_summary_table$Parameter,
  Posterior_Mean = posterior_summary_table$Posterior_Mean,
  Posterior_CI_Lower = posterior_summary_table$Posterior_CI_Lower,
  Posterior_CI_Upper = posterior_summary_table$Posterior_CI_Upper, Difference_Test = ifelse(posterior_summary_table$Posterior_CI_Lower > 0 | posterior_summary_table$Posterior_CI_Upper < 0,
                           "Significant difference", "No significant difference")
)
library(knitr)
kable(summary_table, format = "markdown")
```
